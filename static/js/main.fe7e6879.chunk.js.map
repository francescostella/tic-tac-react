{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/Utils.js","components/AIPlayer.js","components/Game/Game.js","index.js"],"names":["Square","props","isWinnerSquare","winnerLine","includes","cellKey","classes","className","onClick","value","Board","i","this","squares","rows","columns","board","cellsCounter","row","j","push","renderSquare","createBoard","React","Component","Utils","lines","index","length","a","b","c","player","line","items","Math","floor","random","AIPlayer","difficulty","level","levelSkills","easy","insane","possibleMoves","randomItemFromArray","bestMove","playDumb","Game","state","history","Array","fill","coordinatesMove","isHuman","stepNumber","xIsNext","sortAscending","isPlayingAI","humanPlayer","baseState","Object","assign","isNotAllowedMove","registerMove","move","currentIsHuman","slice","setState","concat","calculatePosition","passTurnToAI","setTimeout","moveAI","makeMove","current","calculateWinner","step","winner","moves","map","col","desc","data-move-number","jumpTo","sort","moveA","moveB","key","isDraw","handlePickPlayer","src","handleResetGame","handleClick","handleSort","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe7e6879.chunk.js","sourcesContent":["import './Square.styles.scss';\n\nconst Square = (props) => {\n  const isWinnerSquare = props.winnerLine && props.winnerLine.includes(props.cellKey) ? 'is-winner-square' : '';\n  const classes = `square ${isWinnerSquare}`;\n  return (\n    <button \n      className={classes} \n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;","import React from 'react';\nimport Square from '../Square/Square'; \nimport './Board.styles.scss'\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        key={i}\n        cellKey={i}\n        value={this.props.squares[i]} \n        winnerLine={this.props.winnerLine}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  createBoard(rows, columns) {\n    const board = [];\n    let cellsCounter = 0;\n\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n\n      for (let j = 0; j < columns; j++) {\n        row.push(this.renderSquare(cellsCounter++));\n      }\n\n      board.push(<div className=\"board-row\" key={i}>{row}</div>)\n    }\n    \n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createBoard(3, 3)}\n      </div>\n    );\n  }\n}\n\nexport default Board;","const Utils = {};\n\nUtils.calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let index = 0; index < lines.length; index++) {\n    const [a, b, c] = lines[index];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  return null;\n}\n\nUtils.calculatePosition = (index) => {\n  switch (index) {\n    case 0:\n      return [1, 1];\n    case 1:\n      return [1, 2];\n    case 2:\n      return [1, 3];\n    case 3:\n      return [2, 1];\n    case 4:\n      return [2, 2];\n    case 5:\n      return [2, 3];\n    case 6:\n      return [3, 1];\n    case 7:\n      return [3, 2];\n    case 8:\n      return [3, 3];\n\n    default:\n      return [1, 1];\n  }\n}\n\nUtils.randomItemFromArray = (items) => {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nexport default Utils;","import Utils from '../components/Utils';\n\nclass AIPlayer {\n  level = 1;\n\n  constructor(difficulty) {\n    let levelSkills = {\n      easy: 1,\n      insane: 2,\n    };\n\n    this.level = levelSkills[difficulty] ? levelSkills[difficulty] : 1;\n  }\n\n  static bestMove(board) {\n    return;\n  }\n\n  static playDumb(board) {\n    let possibleMoves = [];\n\n    for (let i = 0; i < board.length; i++) {\n      if (board[i] === null) {\n        possibleMoves.push(i);\n      }  \n    }\n\n    return Utils.randomItemFromArray(possibleMoves);\n  }\n\n  static makeMove(board) {\n    if (this.level === 2) {\n      return this.bestMove(board);\n    }\n\n    return this.playDumb(board);\n  }\n}\n\nexport default AIPlayer;","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport Board from '../Board/Board';\nimport Utils from '../Utils';\nimport AIPlayer from '../AIPlayer';\nimport './Game.style.scss'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n          coordinatesMove: [0, 0],\n          isHuman: true,\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      sortAscending: true,\n    }\n    \n    this.isPlayingAI = false;\n    this.humanPlayer = this.state.xIsNext ? 'X' : 'O';\n    this.baseState = Object.assign({}, this.state);\n    this.AIPlayer = new AIPlayer('easy');\n  }\n\n  handleClick(i) {\n    if (this.isNotAllowedMove() || this.isPlayingAI) {\n      return;\n    }\n\n    this.registerMove(i, true);\n  }\n\n  registerMove(move, currentIsHuman) {\n\n    const history = this.state.history.slice(0, this.state.history.length + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (squares[move]) {\n      return;\n    }\n\n    const player = this.state.xIsNext ? 'X' : 'O';\n\n    squares[move] = player;\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        coordinatesMove: Utils.calculatePosition(move),\n        player: player,\n        isHuman: currentIsHuman\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    }, () => {\n      if (currentIsHuman) {\n        this.passTurnToAI();\n      }\n    });\n  }\n\n  passTurnToAI() {\n    if (this.isNotAllowedMove()) {\n      return;\n    }\n\n    this.isPlayingAI = true;\n\n    setTimeout(() => {\n      const history = this.state.history.slice(0, this.state.history.length + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n  \n      const moveAI = AIPlayer.makeMove(squares);\n      this.registerMove(moveAI, false);\n      this.isPlayingAI = false;\n    }, 1000);\n\n  }\n\n  isNotAllowedMove() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = Utils.calculateWinner(current.squares);\n\n    if (winner) {\n      // Prevent Players move IF there is already a winner\n      return true;\n    }\n\n    if ((this.state.history.length - 1) !== this.state.stepNumber) {\n      // Prevent Players to make a new move if \n      // a the players are visualizing a previous\n      // move using the 'Moves' tool\n      return true;\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handlePickPlayer() {\n    if (this.state.stepNumber !== 0 || this.state.history.length > 1) {\n      // Do nothing if the game is already started\n      return;\n    }\n\n    this.setState({\n      xIsNext: !this.state.xIsNext\n    });\n\n    this.humanPlayer = !this.state.xIsNext ? 'X' : 'O';\n  }\n\n  handleResetGame() {\n    this.setState(this.baseState)\n  }\n\n  handleSort() {\n    if (this.state.sortAscending) {\n      // ASC\n    }\n\n    if (!this.state.sortAscending) {\n      // DESC\n    }\n\n    this.setState({\n      sortAscending: !this.state.sortAscending\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = Utils.calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const row = history[move].coordinatesMove[0];\n      const col = history[move].coordinatesMove[1];\n\n      const desc = move ?\n        history[move].player + ' in row ' + row + ' and col ' + col :\n        'Go to game start';\n        return (\n          <li className=\"game__move\" key={move} data-move-number={move}>\n            <button \n              onClick={() => this.jumpTo(move)}\n              className={this.state.stepNumber === move ? 'active' : ''}\n            >{desc}</button>\n          </li>\n        );\n    }).sort((moveA, moveB) => {\n      if (this.state.sortAscending) {\n        return moveA.key - moveB.key;\n      }\n\n      return moveB.key - moveA.key;\n    });\n\n    const isDraw = moves.length === 10 && !winner;\n\n    return (\n      <div>\n        <div className=\"game\">\n          <div className=\"game__content\">\n            <div className=\"game__header\">\n              <div className=\"game__players\">\n                <button \n                  className={`game__player ${this.state.xIsNext ? \"game__player--active\" : \"\"} ${winner || isDraw ? \"hidden\" : \"\"}`}\n                  onClick={() => this.handlePickPlayer()}\n                >X \n                  <span className={`game__player-human ${this.humanPlayer === 'X' ? 'active' : ''}`}>Human<ReactSVG src=\"./icon-human.svg\" /></span>\n                  <span className={`game__player-bot ${this.humanPlayer !== 'X' ? 'active' : ''}`}>Bot<ReactSVG src=\"./icon-bot.svg\" /></span>\n                </button>\n                <button \n                  className={`game__player ${!this.state.xIsNext ? \"game__player--active\" : \"\"} ${winner || isDraw ? \"hidden\" : \"\"}`}\n                  onClick={() => this.handlePickPlayer()}\n                >O\n                  <span className={`game__player-human ${this.humanPlayer === 'O' ? 'active' : ''}`}>Human<ReactSVG src=\"./icon-human.svg\" /></span>\n                  <span className={`game__player-bot ${this.humanPlayer !== 'O' ? 'active' : ''}`}>Bot<ReactSVG src=\"./icon-bot.svg\" /></span>\n                </button>\n              </div>\n\n              <div \n                className={`game__message ${(isDraw ? 'is-draw' : '')} ${(winner ? 'is-winner' : '')}`}\n                onClick={() => this.handleResetGame()}\n              >\n                <h3 className=\"game__message-title\">\n                  {winner ? 'The WINNER is ' + winner.player + '!!! ' : 'DRAW'}\n                </h3> \n              </div>\n            </div>\n            <div className=\"game__board\">\n              <Board\n                winnerLine={winner?.line}\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n            </div>\n            <div className=\"game__info\">\n              <div className=\"game__controls\">\n                <button \n                  className=\"game__controls-order\"\n                  onClick={() => this.handleSort()}\n                  disabled={moves.length < 2}\n                >\n                  Order by <span>{this.state.sortAscending ? '▲' : '▼'}</span>\n                </button>\n              </div>\n              <ol className=\"game__moves\">{moves}</ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","import ReactDOM from 'react-dom';\nimport Game from './components/Game/Game'\nimport './index.scss';\n\n//===============================\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}